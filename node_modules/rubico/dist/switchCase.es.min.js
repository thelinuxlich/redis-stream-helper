/**
 * rubico v1.8.1
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2021 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isPromise=n=>null!=n&&"function"==typeof n.then,thunkConditional=(n,r,t)=>n?r():t(),thunkifyArgs=(n,r)=>function(){return n(...r)},thunkify3=(n,r,t,u)=>function(){return n(r,t,u)},__=Symbol.for("placeholder"),curry3ResolveArg0=(n,r,t)=>function(u){return n(u,r,t)},curry3ResolveArg1=(n,r,t)=>function(u){return n(r,u,t)},curry3ResolveArg2=(n,r,t)=>function(u){return n(r,t,u)},curry3=function(n,r,t,u){return r==__?curry3ResolveArg0(n,t,u):t==__?curry3ResolveArg1(n,r,u):curry3ResolveArg2(n,r,t)},funcConditional=function(n,r,t){const u=n.length-1;for(;(t+=2)<u;){const u=n[t],l=n[t+1],s=u(...r);if(null!=(f=s)&&"function"==typeof f.then)return s.then((e=thunkConditional,o=__,i=thunkifyArgs(l,r),c=thunkify3(funcConditional,n,r,t),o==__?curry3ResolveArg0(e,i,c):i==__?curry3ResolveArg1(e,o,c):curry3ResolveArg2(e,o,i)));if(s)return l(...r)}var e,o,i,c,f;return n[t](...r)},switchCase=n=>function(...r){return funcConditional(n,r,-2)};export default switchCase;
