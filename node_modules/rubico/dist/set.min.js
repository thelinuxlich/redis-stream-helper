/**
 * rubico v1.8.1
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2021 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */

!function(t,n){"object"==typeof module?module.exports=n:"function"==typeof define?define((()=>n)):t.set=n}("object"==typeof globalThis?globalThis:this,function(){"use strict";const t=Array.isArray,n=/[.|[|\]]+/,e=function(t,n){const e=new Map,o=function(o){if(e.has(o))return e.get(o);const i=t(o);return e.set(o,i),e.size>n&&e.clear(),i};return o.cache=e,o}((function(t){const e=t.length-1,o="["==t[0],i="]"==t[e];return o&&i?t.slice(1,e).split(n):o?t.slice(1).split(n):i?t.slice(0,e).split(n):t.split(n)}),500),o=function(n,o,i){if(!(t=>{if(null==t)return!1;const n=typeof t;return"object"==n||"function"==n})(n))return n;const r=(n=>t(n)?n:"string"==typeof n?e(n):[n])(i),s=r.length,c=s-1,u={...n};let f=u,l=-1;for(;++l<s;){const n=r[l];if(l==c)f[n]=o;else{const e=f[n],o=t(e)?e.slice():{...e};f[n]=o,f=o}}return u};return(t,n)=>function(e){return o(e,n,t)}}());
