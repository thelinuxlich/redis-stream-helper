/**
 * rubico v1.8.1
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2021 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isArray=Array.isArray,objectValues=Object.values,SelfReferencingPromise=function(r){const e=r.then((r=>[r,e]));return e},isPromise=r=>null!=r&&"function"==typeof r.then,promiseRace=Promise.race.bind(Promise),asyncArrayAny=async function(r,e,n,t){const o=r.length;for(;++n<o;){const o=e(r[n]);if(isPromise(o))t.add(SelfReferencingPromise(o));else if(o)return!0}for(;t.size>0;){const[r,e]=await promiseRace(t);if(t.delete(e),r)return!0}return!1},arrayAny=function(r,e){const n=r.length;let t=-1;for(;++t<n;){const n=e(r[t]);if(isPromise(n))return asyncArrayAny(r,e,t,new Set([SelfReferencingPromise(n)]));if(n)return!0}return!1},asyncIteratorAny=async function(r,e,n,t=20){let o=r.next();for(isPromise(o)&&(o=await o);!o.done;){if(n.size>=t){const[r,e]=await promiseRace(n);if(n.delete(e),r)return!0}const i=e(o.value);if(isPromise(i))n.add(SelfReferencingPromise(i));else if(i)return!0;o=r.next(),isPromise(o)&&(o=await o)}for(;n.size>0;){const[r,e]=await promiseRace(n);if(n.delete(e),r)return!0}return!1},iteratorAny=function(r,e){for(const n of r){const t=e(n);if(isPromise(t))return asyncIteratorAny(r,e,new Set([SelfReferencingPromise(t)]));if(t)return!0}return!1},reducerAnySync=r=>function(e,n){return!!e||r(n)},__=Symbol.for("placeholder"),curry2ResolveArg0=(r,e)=>function(n){return r(n,e)},curry2ResolveArg1=(r,e)=>function(n){return r(e,n)},curry2=function(r,e,n){return e==__?curry2ResolveArg0(r,n):curry2ResolveArg1(r,e)},reducerAny=r=>function(e,n){return!0===e?e:isPromise(e)?e.then((t=reducerAnySync(r),i=n,(o=__)==__?curry2ResolveArg0(t,i):curry2ResolveArg1(t,o))):!!e||r(n);var t,o,i},symbolIterator=Symbol.iterator,symbolAsyncIterator=Symbol.asyncIterator,any=r=>function(e){return isArray(e)?arrayAny(e,r):null==e?r(e):"function"==typeof e[symbolIterator]?iteratorAny(e[symbolIterator](),r):"function"==typeof e[symbolAsyncIterator]?asyncIteratorAny(e[symbolAsyncIterator](),r,new Set):"function"==typeof e.reduce?e.reduce(reducerAny(r),!1):e.constructor==Object?arrayAny(objectValues(e),r):r(e)};export default any;
