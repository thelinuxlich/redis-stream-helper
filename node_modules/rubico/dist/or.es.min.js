/**
 * rubico v1.8.1
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2021 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isPromise=r=>null!=r&&"function"==typeof r.then,__=Symbol.for("placeholder"),curry3ResolveArg0=(r,e,n)=>function(o){return r(o,e,n)},curry3ResolveArg1=(r,e,n)=>function(o){return r(e,o,n)},curry3ResolveArg2=(r,e,n)=>function(o){return r(e,n,o)},curry3=function(r,e,n,o){return e==__?curry3ResolveArg0(r,n,o):n==__?curry3ResolveArg1(r,e,o):curry3ResolveArg2(r,e,n)},asyncOr=async function(r,e){const n=r.length;let o=-1;for(;++o<n;){let n=r[o](e);if(isPromise(n)&&(n=await n),n)return!0}return!1},_asyncOrInterlude=(r,e,n)=>!!n||asyncOr(r,e),or=r=>function(e){if(null!=e&&"function"==typeof e.or)return e.or(r);const n=r.length;let o=-1;for(;++o<n;){const n=r[o](e);if(isPromise(n))return n.then((t=_asyncOrInterlude,c=e,l=__,(u=r)==__?curry3ResolveArg0(t,c,l):c==__?curry3ResolveArg1(t,u,l):curry3ResolveArg2(t,u,c)));if(n)return!0}var t,u,c,l;return!1};export default or;
